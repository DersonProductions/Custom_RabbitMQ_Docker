name: Deploy Docker Image

on:
  workflow_dispatch:
      inputs:
        tag:
          description: 'Tag for the Docker image'
          required: true
          default: 'v1.0.0'
  push:
    tags:
          - 'v*'  # Matches any version tag starting with 'v'

jobs:      
  scan_and_lint:
    name: Scan and Lint Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4.2.0
        # https://github.com/actions/checkout
        with:  
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          ssh-strict: true
          ssh-user: git
          persist-credentials: false
          fetch-depth: 1
          fetch-tags: true
          show-progress: true
          github-server-url: https://github.com
      - name: ls
        run: ls -alR
      - name: scan_and_lint
        uses: ${{github.action_path}}./.github/workflows/image-linter-and-security-scan.yml
      - name: failure check
        if: failure() || cancelled()
        shell: bash
        run: |
          exit 1

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [
        scan_and_lint
      ]
    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4.2.0
      # https://github.com/actions/checkout
      with:  
        repository: ${{ github.repository }}
        ref: ${{ github.ref }}
        ssh-strict: true
        ssh-user: git
        persist-credentials: false
        fetch-depth: 1
        fetch-tags: true
        show-progress: true
        github-server-url: https://github.com
    - name: Setup Environment Variables
      shell: bash
      run: |
        echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        # if env.tag is defined, use it, otherwise use the tag from the event
        if [ -z "${{ env.tag }}" ]; then
          echo "TAG=$(echo ${{ github.ref }} | sed -n 's/refs\/tags\/v//p')" >> $GITHUB_ENV
        else
          echo "TAG=${{ env.tag }}" >> $GITHUB_ENV
        fi
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1
      # https://github.com/docker/setup-buildx-action
      with:
          buildkitd-flags: --debug

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build the Docker image
      shell: bash
      run: |
        docker build . --file Dockerfile --tag ghcr.io/${{ env.REPO_NAME }}:${{ env.TAG }}
        docker images

    - name: Build the Docker image and push to GitHub Container Registry
      shell: bash
      run: |
        docker push ghcr.io/${{ env.REPO_NAME }}:${{ env.TAG }}
